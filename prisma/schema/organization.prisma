type Colors {
    primary   String?
    secondary String?
    accent    String?
    success   String?
    warning   String?
    danger    String?
    info      String?
    light     String?
    dark      String?
    neutral   String?
}

type Branding {
    logo       String?
    background String?
    font       String?
    colors     Colors?
}

type PurchasedModule {
    moduleId         String? // Reference to the original module if needed
    purchaseDate     DateTime  @default(now())
    licenseStartDate DateTime  @default(now())
    licenseEndDate   DateTime?
    isActive         Boolean   @default(true)
}

type PurchesedApp {
    appId            String? // Reference to the original app if needed
    modules          PurchasedModule[]
    purchaseDate     DateTime          @default(now())
    licenseStartDate DateTime          @default(now())
    licenseEndDate   DateTime?
    isActive         Boolean           @default(true)
}

model Organization {
    id               String         @id @default(auto()) @map("_id") @db.ObjectId
    securitySchemeId String         @db.ObjectId
    name             String
    apps             PurchesedApp[]
    description      String
    code             String
    branding         Branding?
    deleteAt         DateTime?
    createdAt        DateTime       @default(now())
    updatedAt        DateTime       @updatedAt

    //relations
    users          User[]
    securityScheme SecurityScheme @relation(fields: [securitySchemeId], references: [id])
}
