enum GenderType {
  male
  female
  other
  prefer_not_to_say
  unknown
  not_applicable
}

enum PhoneType {
  mobile
  home
  work
  emergency
  fax
  pager
  main
  other
}

enum IdentificationType {
  passport
  drivers_license
  national_id
  postal_id
  voters_id
  senior_citizen_id
  company_id
  school_id
}

type Phone {
  type        PhoneType?
  countryCode String?
  number      String?
  isPrimary   Boolean?
}

type ContactAddress {
  street      String?
  address2    String?
  city        String?
  state       String?
  country     String?
  postalCode  String?
  zipCode     String?
  houseNumber String?
}

type ContactInfo {
  email   String?
  phones  Phone[]
  fax     String?
  address ContactAddress?
}

type Identification {
  type           IdentificationType?
  number         String?
  issuingCountry String?
  expiryDate     DateTime?
}

type Metadata {
  isActive    Boolean   @default(true)
  status      String?
  createdBy   String?   @db.ObjectId
  updatedBy   String?   @db.ObjectId
  lastLoginAt DateTime?
  deletedAt   DateTime?
}

model Person {
  id             String  @id @default(auto()) @map("_id") @db.ObjectId
  organizationId String? @db.ObjectId

  // Flattened searchable fields
  prefix          String?
  firstName       String
  middleName      String?
  lastName        String
  dateOfBirth     DateTime?
  placeOfBirth    String?
  age             Int?
  nationality     String?
  primaryLanguage String?
  gender          GenderType?
  currency        String?
  vipCode         String?

  //  Keep structured as composites (not searched often)
  contactInfo    ContactInfo?
  identification Identification?

  //metadata
  isActive    Boolean   @default(true)
  status      String?
  createdBy   String?   @db.ObjectId
  updatedBy   String?   @db.ObjectId
  lastLoginAt DateTime?
  isDeleted   Boolean   @default(false)

  //  Relations
  users User[]
}
